@{
    ViewBag.Title = "LoginPage";
    Layout = null;
}
@model asp.netwebmvcWebsite.Models.LoginModel
<html>
<head>
    <title>login Page</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<link href="~/Content/Login.css" rel="stylesheet" />
</head>
<body>
    <div id="head">
        @Html.Partial("head")
    </div>
    <div class="welcomecontainer">
        
        <div class="image"> <img src="../Images/marriageimage.jpg" ID="Image1" class="rounded float-start" />  </div>
        <div id="login">

            <div class="heading"><h2><b><i>LOGIN</i></b></h2> </div>

            <div class="form">
                @using (@Html.BeginForm("LoginPage", "Home", FormMethod.Post))
                {
                    <div class="form-container">
                        <div class="form-group">
                            <div class="label">
                                @Html.Label("Email : ")
                            </div>
                            <div class="input-group">
                                @Html.TextBoxFor(model => model.RegisteredEmailId, new { @id = "Emailtxt", @type = "Email", @placeholder = "Enter your Email", @Style = "border-radius:25px; border-color:darkblue;" })
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.RegisteredEmailId, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <div class="label">
                                @Html.LabelFor(model => model.Password, "Password :", new { @text = "Password : " })
                            </div>
                            <div class="input-group">
                                @Html.PasswordFor(model => model.Password, new { @id = "Passwordtxt", @type = "password", @class = "form-control", @placeholder = "Enter Password", @style = "border-color:darkblue;border-radius:25px;" })
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-outline-secondary" id="togglePassword">
                                        <i id="togglePasswordIcon" class="fa fa-eye"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        @Html.ViewData["Success"]
                        @Html.ValidationSummary(true, "", new { @class = "text-danger", @id = "errorsview" })

                        <div class="links">
                            @Html.ActionLink("Forgot Password", "forgot", "Home", new { @style = "text-decoration:none" })

                            @Html.ActionLink("Not Yet Registered", "Registration", "Home", new { @style = "text-decoration:none" })
                        </div>
                        <div class="button">
                            <input type="submit" value="Login" class="border-success" />
                        </div>
                        @if (TempData["PasswordChangedSuccess"] != null)
                        {
                            <script> alert('@TempData["PasswordChangedSuccess"]');  </script>
                        }

                    </div>
                }
            </div>

        </div>

    </div>

    
   <style>

       body{height:100vh;}


        .welcomecontainer {
            height: 95vh;
            width: auto;
            display: flex;
            /*flex-direction: row;*/
            background-color: black;
        }

             .image {
                height: auto;
                min-width: 50%;
                align-items: center;
                border-radius: 0% 50% 50% 00%;
                border: 5px solid darkblue;
                background-color: rgb(87, 84, 82);
                position: relative;
                overflow: hidden;
            }

        img {
            width: 100%;
            height: 100%;
            justify-content: center; /* Align the image to the right */
            align-items: center; /* Center the image vertically */
            border-radius: 0% 50% 50% 00%; /* right curve*/
            object-fit: fill;
            top: 2px;
            left: 2px;
            bottom: 2px;
            position: relative;
            border-radius: 0% 50% 50% 00%; /* right curve*/
            overflow: hidden;
            border: 5px solid black;
        }

       #login {
           height: auto;
           width: 100%;
           background-color: black;
           display: flex;
           flex-direction: column;
           place-items: center;
           margin-top: 20px;
           justify-content: center;
       }

        .links {  gap:10px; 
                 display:flex;
                 justify-content:center; 
                 
        }
       .links a {
           text-decoration: none;
          color: white;
       }
        .links a:hover{
            color:white;
            border:2px solid darkblue;
            background-color:black;
        }

        .heading {

            color: darkblue;
            text-align: center;
        }
       .label {
           width: 60%;
       }
       .label a{font-weight:bold;}
       form {
           width: 100%;
           margin:0px;
       }

       .form {
           display: flex;
           justify-content: center;
           border-radius: 25px;
           background-color: black;
           align-items: center;
           border: 2px solid darkblue;
           /* padding: 10px;*/
           width: 90%;
           margin: 25px; /*10px 30px 10px 30px;  top right bottom left*/
       }

       .form-group {
           display: flex;
           justify-content: center;
           width: auto; /*100%;  */
           margin: 5px;
           align-items: center;
         
          
           flex-direction: row; /* Stacks label and input vertically */
           align-items: flex-start;
           gap: 5px; /* Adds space between label and input */
       }
       


            .form-group label {
                justify-content: center;
                align-items: flex-start;
                align-content: space-around;
                justify-items: center;
                padding: 10px;
                font-size:14px;
                color:white;
            }

           

       .form-container {
           width: 95%;
           margin: 10px;
           background-color: darkgray;
           padding: 5px;
           border-radius: 20px;
           box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
           /* width: 450px; 400px;  Set a fixed width */
       }

      

        .alert {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            gap: 5px; /* Adds space between error messages */
            color: rgb(230, 46, 46);
            padding: 3px;
            margin: 0;
            font-size: 10px;
        }

        input {
            border: 2px  solid ;
            border-color:darkblue;
           /* padding-left:10px;
            margin-left: 5px;*/
            margin-right: 5px;
            width: 200px;
            max-width: 200px;
            height: 50px;
            font-size:14px;
        }

       .button {
           display: flex;
                 justify-content: center;
       }
       .button .border-success {
           
           border: 2px solid Darkblue;
           background-color: black;
           color: white;
           border-radius: 20px;
       }

               .border-success:hover {
                   border: 2px solid Darkblue;
                   background-color: white;
                   color: darkblue;
                   border-radius: 20px;
                   text-decoration: none;
                   font-weight: bold;
               }

               .text-danger{display:flex;
                            justify-content:center;
               }

            input.ng-invalid.ng-touched {
                border-color: red;
            }


        small {
            color: red;
        }
    </style>

    <script>
     document.addEventListener("DOMContentLoaded", function ()
     {
        const togglePasswordd = document.getElementById("togglePassword");
        const passwordField = document.getElementById("Passwordtxt");
         const toggleIcon = document.getElementById("togglePasswordIcon");


        togglePasswordd.addEventListener("click", function () {
            // Toggle password visibility
            if (passwordField.type === "password")
           {
                passwordField.type = "text";
                toggleIcon.classList.remove("fa-eye");
                toggleIcon.classList.add("fa-eye-slash");
            }
           else {
                passwordField.type = "password";
                toggleIcon.classList.remove("fa-eye-slash");
                toggleIcon.classList.add("fa-eye");
            }
      });

        });

    </script>

</body>

</html>


